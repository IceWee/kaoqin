package bing;

import bing.log.JTextAreaLogAppender;
import bing.thread.StatThread;
import bing.util.ConfigUtils;
import bing.util.ExceptionUtils;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.apache.commons.lang3.StringUtils;
import org.jvnet.substance.skin.SubstanceOfficeBlue2007LookAndFeel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 入口
 *
 * @author IceWee
 */
public class AppUI extends JFrame {

    private static final Logger LOGGER = LoggerFactory.getLogger(AppUI.class);
    private static final ImageIcon APP_ICON;
    private static JTextAreaLogAppender logThread; // 日志线程
    
    static {
        URL url = AppUI.class.getResource(Constants.ICON_APP_PATH);
        APP_ICON = new ImageIcon(url);
    }
    
    /**
     * Creates new form AppUI
     */
    public AppUI() {
        // 初始化UI
        initComponents();
        // 初始化log4j日志输出控制台
        initLogConsole();
        LOGGER.info("感谢使用 走向未来®考勤统计辅助工具v1.0");
    }
    
    /**
     * 初始化日志控制台
     */
    private void initLogConsole() {
    	try {
            // 说明：gui对应log4j.properties中的配置，是appender的名称
            if (logThread != null) {
                logThread.setRun(false);
                logThread = null;
            }
            logThread = new JTextAreaLogAppender("gui", this.console, this.logScrollPane);
            logThread.start();
        } catch (Exception e) {
            String error = ExceptionUtils.createExceptionString(e);
            LOGGER.error("初始化日志控制台时出现了异常...\n{}", error);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        configPanel = new javax.swing.JPanel();
        statButton = new javax.swing.JButton();
        cardLabel = new javax.swing.JLabel();
        cardTextField = new javax.swing.JTextField();
        attendLabel = new javax.swing.JLabel();
        attendTextField = new javax.swing.JTextField();
        cardButton = new javax.swing.JButton();
        attendButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        logPanel = new javax.swing.JPanel();
        logScrollPane = new javax.swing.JScrollPane();
        console = new bing.ui.JTextAreaExt();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("走向未来®考勤统计辅助工具v1.0");

        configPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "配置区域", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("幼圆", 2, 14))); // NOI18N
        configPanel.setFont(new java.awt.Font("幼圆", 2, 14)); // NOI18N

        statButton.setFont(new java.awt.Font("幼圆", 0, 14)); // NOI18N
        statButton.setText("开始统计");
        statButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        statButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statButtonActionPerformed(evt);
            }
        });

        cardLabel.setFont(new java.awt.Font("幼圆", 1, 14)); // NOI18N
        cardLabel.setText("打卡记录表");

        cardTextField.setEditable(false);

        attendLabel.setFont(new java.awt.Font("幼圆", 1, 14)); // NOI18N
        attendLabel.setText("考勤模板表");

        attendTextField.setEditable(false);

        cardButton.setFont(new java.awt.Font("幼圆", 0, 14)); // NOI18N
        cardButton.setText("浏  览..");
        cardButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardButtonActionPerformed(evt);
            }
        });

        attendButton.setFont(new java.awt.Font("幼圆", 0, 14)); // NOI18N
        attendButton.setText("浏  览..");
        attendButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("幼圆", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("提醒：请先将考勤系统导出的打卡记录表另存为97-2003版本的Excel文件");

        javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
        configPanel.setLayout(configPanelLayout);
        configPanelLayout.setHorizontalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(cardLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cardTextField))
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(attendLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(attendTextField)))
                        .addGap(10, 10, 10)
                        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cardButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(attendButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(statButton)))
                .addContainerGap())
        );
        configPanelLayout.setVerticalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(statButton)
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardLabel)
                    .addComponent(cardTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardButton))
                .addGap(18, 18, 18)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attendLabel)
                    .addComponent(attendTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attendButton))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        logPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "日志区域", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("幼圆", 2, 14))); // NOI18N

        console.setColumns(20);
        console.setRows(5);
        logScrollPane.setViewportView(console);

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logScrollPane)
        );
        logPanelLayout.setVerticalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(configPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(configPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 选择打卡记录表-EXCEL格式
       * 
     * @param evt 
     */
    private void cardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardButtonActionPerformed
        JFileChooser chooser = new JFileChooser(cardTextField.getText());
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showOpenDialog(this);
        File excel = chooser.getSelectedFile();
        if (excel != null) {
            String name = excel.getName();
            if (StringUtils.endsWith(name, Constants.EXT_XLSX) || StringUtils.endsWith(name, Constants.EXT_XLS)) {
                cardTextField.setText(excel.getPath());
            } else {
                JOptionPane.showMessageDialog(this, "请选择Excel格式打卡记录表！", "提示信息", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_cardButtonActionPerformed

    /**
     * 选择考勤模板表-EXCEL格式
     * 
     * @param evt 
     */
    private void attendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendButtonActionPerformed
        JFileChooser chooser = new JFileChooser(attendTextField.getText());
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showOpenDialog(this);
        File excel = chooser.getSelectedFile();
        if (excel != null) {
            String name = excel.getName();
            if (StringUtils.endsWith(name, Constants.EXT_XLSX) || StringUtils.endsWith(name, Constants.EXT_XLS)) {
                attendTextField.setText(excel.getPath());
            } else {
                JOptionPane.showMessageDialog(this, "请选择Excel格式考勤模板表！", "提示信息", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_attendButtonActionPerformed

    /**
     * 开始统计按钮触发事件
       * 
     * @param evt 
     */
    private void statButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statButtonActionPerformed
        if (canRun()) {
            int n = JOptionPane.showConfirmDialog(this, "确定要统计考勤记录吗？", "确认信息", JOptionPane.OK_CANCEL_OPTION);
            if (Constants.OPTION_OK == n) {
                stat();
            }
        }
    }//GEN-LAST:event_statButtonActionPerformed

    /**
     * 条件检查
     * 
     * @return 
     */
    private boolean canRun() {
        String rootDir = this.cardTextField.getText();
        if (StringUtils.isBlank(rootDir)) {
            JOptionPane.showMessageDialog(this, "请选择打卡记录表（97-2003格式）！", "提示信息", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        String statFileDir = this.attendTextField.getText();
        if (StringUtils.isBlank(statFileDir)) {
            JOptionPane.showMessageDialog(this, "请选择考勤模板表（97-2003格式）！", "提示信息", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
    
    /**
     * 统计主方法
     */
    private void stat() {
        initLogConsole();
        LOGGER.debug("开始统计...");
        String cardExcelPath = this.cardTextField.getText();
        String attendExcelPath = this.attendTextField.getText();
        StatThread statThread = new StatThread(this, cardExcelPath, attendExcelPath);
        new Thread(statThread).start();
        buttonsDisabled();
    }
    
    /**
     * 按钮可用
     */
    public void buttonsEnabled() {
        this.statButton.setEnabled(true);
        this.cardButton.setEnabled(true);
        this.attendButton.setEnabled(true);
    }
    
    /**
     * 按钮不可用
     */
    private void buttonsDisabled() {
        this.statButton.setEnabled(false);
        this.cardButton.setEnabled(false);
        this.attendButton.setEnabled(false);
    }
    
    /**
     * 执行完成
     */
    public void completed() {
        LOGGER.info("统计完毕.....");
        buttonsEnabled();
        try {
            String reportPath = ConfigUtils.getReportPath();
            java.awt.Desktop.getDesktop().open(new File(reportPath));
        } catch (IOException ex) {
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        // 设置主题风格
        setlookAndFeel();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                AppUI app = new AppUI();
                app.setIconImage(APP_ICON.getImage());
                int w = (int) (Toolkit.getDefaultToolkit().getScreenSize().getWidth() - app.getWidth()) / 2;
                int h = (int) (Toolkit.getDefaultToolkit().getScreenSize().getHeight() - app.getHeight()) / 2;
                app.setLocation(w, h);
                app.setVisible(true);
            }
        });
    }
    
    /**
     * 设置主题风格
     */
    static void setlookAndFeel() {
        try {
            UIManager.setLookAndFeel(new SubstanceOfficeBlue2007LookAndFeel());
        } catch (Exception e) {}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attendButton;
    private javax.swing.JLabel attendLabel;
    private javax.swing.JTextField attendTextField;
    private javax.swing.JButton cardButton;
    private javax.swing.JLabel cardLabel;
    private javax.swing.JTextField cardTextField;
    private javax.swing.JPanel configPanel;
    private bing.ui.JTextAreaExt console;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel logPanel;
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JButton statButton;
    // End of variables declaration//GEN-END:variables
}
